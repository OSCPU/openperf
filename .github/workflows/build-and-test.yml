name: Test openperf

on:
  push:
  workflow_dispatch:

env:
  AM_HOME: "${{ github.workspace }}/abstract-machine"
  NEMU_HOME: "${{ github.workspace }}/openperf-nemu"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        arch: ["native", "riscv32-nemu"]
    steps:

      - uses: nixbuild/nix-quick-install-action@v27

      - uses: cachix/cachix-action@v14
        with:
          name: ysyx
          authToken: '${{ secrets.CACHIX_SIGNING_KEY }}'

      - name: Checkout Main Repo (openperf)
        id: checkout-openperf
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: '${{ secrets.DEPLOY_KEY }}'

      - name: Checkout Nemu Repo
        id: checkout-nemu
        if: ${{ contains(matrix.arch, 'nemu') }}
        uses: actions/checkout@v4
        with:
          token: '${{ secrets.DEPLOY_KEY }}'
          repository: xinyangli/openperf-nemu
          path: openperf-nemu

      - name: Prepare devshell
        run: |
          mkdir -p /tmp/env
          nix develop --no-use-registries --profile /tmp/env/openperf-env-${{ matrix.arch }} .#${{ matrix.arch }}

      - name: Build nemu 
        if: ${{ contains(matrix.arch, 'nemu') }}
        run: |
          nix develop --no-use-registries /tmp/env/openperf-env-${{ matrix.arch }} --impure --command make -C openperf-nemu ARCH=${{ matrix.arch }} openperf_${{ matrix.arch }}_defconfig
          nix develop --no-use-registries /tmp/env/openperf-env-${{ matrix.arch }} --impure --command make -C openperf-nemu ARCH=${{ matrix.arch }}

      - name: Build
        run: |
          nix develop --no-use-registries /tmp/env/openperf-env-${{ matrix.arch }} --impure --command scripts/build.sh -s ref,test -a ${{ matrix.arch }}

      - name: Run openperf benchmark
        run: |
          nix develop --no-use-registries /tmp/env/openperf-env-${{ matrix.arch }} --impure --command python3 scripts/run.py --tags ${{ matrix.arch }} test_config.example.yaml

      - name: Upload built binary
        uses: actions/upload-artifact@v4
        with:
          name: openperf-binary-${{ matrix.arch }}
          path: |
            openperf/build/images/*

